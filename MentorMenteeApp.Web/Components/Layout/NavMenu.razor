@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.Routing
@using System.Security.Claims

<div class="nav-scrollable">
    <nav class="nav flex-column">
        <AuthorizeView>
            <Authorized>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/profile" Match="NavLinkMatch.All">
                        <span class="bi bi-person-fill" aria-hidden="true"></span> 내 프로필
                    </NavLink>
                </div>

                @if (IsCurrentUserMentee(context))
                {
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="/mentors">
                            <span class="bi bi-people-fill" aria-hidden="true"></span> 멘토 찾기
                        </NavLink>
                    </div>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="/my-requests">
                            <span class="bi bi-list-check" aria-hidden="true"></span> 내 요청
                        </NavLink>
                    </div>
                }

                @if (IsCurrentUserMentor(context))
                {
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="/received-requests">
                            <span class="bi bi-inbox-fill" aria-hidden="true"></span> 받은 요청
                        </NavLink>
                    </div>
                }
            </Authorized>
        </AuthorizeView>
    </nav>
</div>

@code {
    private bool IsCurrentUserMentee(AuthenticationState context)
    {
        var roleClaim = context.User.FindFirst("role");
        return roleClaim?.Value == "mentee";
    }

    private bool IsCurrentUserMentor(AuthenticationState context)
    {
        var roleClaim = context.User.FindFirst("role");
        return roleClaim?.Value == "mentor";
    }
}

